AWSTemplateFormatVersion: '2010-09-09'
Description: cfn template to deploy CloudFront 
Parameters:
  project:
    Type: String
    Default: netsoltech
    Description:  Project Name
  env:
    Type: String
    Default: stage
    AllowedValues: [prod, dev, qa, stage]
    Description:  Environment Name   
  app:
    Type: String
    Default: app
    Description: Name of the app
  targetDns:
    Type: String
    Description: Domain name for the origin 
  viewerProtocolPolicy:
    Type:  String
    Default: redirect-to-https
    AllowedValues: [allow-all ,https-only ,redirect-to-https]
    Description: Protocol with users access the files in the origin 
  originProtocolPolicy:
    Type:  String
    Default: https-only
    AllowedValues: [http-only,https-only, match-viewer]
    Description: Protocol with cloudfront access the files in the origin 
  cfDistributionStatus:
    Type: String
    Default: true
    AllowedValues: [true, false]
    Description: Enable or disable the distribution
  targetOriginId: 
    Type: String
    Description: Description for the ALB origin ID
  defaultTTL:
    Type: Number
    Default: 86400
    Description: Default cache retention time for objects in seconds
  maxTTL:
    Type: Number
    Default: 259300
    Description: Maximum cache retention time for objects in seconds
  minTTL:
    Type: Number
    Default: 86400
    Description: Minimum cache retention time for objects in seconds
  acmCertificateIdentifier:
    Type: String
    Description: Certificate Identifier
  cfHttpsPort:
    Type: String
    Description: HTTPS port that CloudFront uses to connect to the origin
  cfOriginSSLProtocols:
    Type: String
    Description: Minimum SSL/TLS protocol that cloudfront uses when connecting to the origin over HTTPS
  cfAlias:
    Type: String
    Description: Domain name of the website
  cfOriginRequestPolicyId:
    Type: String
    Description: Unique identifier of the origin request policy that is attached to the default cache behavior
  cfResponseHeadersPolicyId:
    Type: String
    Description: Id for a response headers policy
  cfHttpVersion:
    Type: String
    Description: Maximum HTTP version(s) that viewers need to use to communicate with CloudFront
  cfPriceClass:
    Type: String
    Default: PriceClass_All
    AllowedValues: [PriceClass_100, PriceClass_200, PriceClass_All]
    Description: Price class that corresponds with the maximum price for CloudFront service
  acmCertificateProtocolVersion:
    Type: String
    Default: TLSv1.2_2021
    AllowedValues: [SSLv3, TLSv1, TLSv1.1_2016, TLSv1.2_2018, TLSv1.2_2019, TLSv1.2_2021, TLSv1_2016]
    Description: Minimum SSL/TLS protocol that cloudfront can use to communicate with viewers
  acmCertificateSslSupportMethod:
    Type: String
    Default: sni-only
    AllowedValues: [sni-only, static-ip, vip]
    Description: If the distribution uses Aliases specify which viewers the distribution accepts HTTPS connections from
  cfCachePolicyConfigComment:
    Type: String
    Description: Describe the cache policy
  cfCachePolicyConfigName:
    Type: String
    Description: Name of cloudfront cache policy
  cfCachePolicyCookieBehavior:
    Type: String
    Default: all
    AllowedValues: [all, allExcept, none, whitelist]
    Description: Cookies present in viewer requests are considered in both the cache key and the requests sent by CloudFront to the origin
  cfCachePolicyHeaderBehavior:
    Type: String
    Default: whitelist
    AllowedValues: [none, whitelist]
    Description: HTTP headers are included into both the cache key and the requests sent by CloudFront to the origin
  s3CfAccessLogBucketDomainName:
    Type: String
    Description: Domain name of S3 bucket for access logs
  accessLogCookies:
    Type: String
    Default: true
    AllowedValues: [true , false]
    Description:  Include cookies in access logs of CloudFront
  accessLogPrefix:
    Type: String
    Description: Prefix for S3 bucket of access logs
  cfDistComment:
    Type: String
    Description: CloudFront Distribution Description
  # cfOriginAccessIdentityComment:
  #   Type: String
  #   Description: CloudFront Origin Access Identity Description
  # s3BucketDomainName: 
  #   Type: String
  #   Description: Name of an S3 bucket
  # s3OriginId:
  #   Type: String
  #   Description: Description for the S3 origin ID
  # s3PathPattern:
  #   Type: String
  #   Description: Path of a folder in S3 bucket
  isEnableCfLogging:
    Type: String
    Default: yes
    AllowedValues: [yes, no]
    Description: Enable cloudfront logging or not
  cfCacheDisablePolicyId:
    Type: String
    Description: Id for a cache disable policy
  cfEnableCacheRequestPolicy:
    Type: String
    Description: Enable cache request policy or not
  enableAlias:
    Type: String
    Description: Enable Alias for cloudfront distribution or not

Conditions:
 # isCreateCfOriginAccessIdentityForS3: !Not [ !Equals [!Ref s3BucketDomainName, "" ]]
  isCreateAlbOrigin: !Not [ !Equals [!Ref targetDns, "" ]]
 # isCreateS3Origin: !Not [ !Equals [!Ref s3BucketDomainName, "" ]]
  isEnableCfLogging: !Equals [!Ref isEnableCfLogging, yes ]
  isEnableCacheRequestPolicy: !Equals [!Ref cfEnableCacheRequestPolicy, yes ]
  isEnableAlias: !Equals [!Ref enableAlias, yes ]

Resources:
  # cloudFrontOriginAccessIdentityForS3:
  #   Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
  #   Condition: isCreateCfOriginAccessIdentityForS3
  #   Properties:
  #     CloudFrontOriginAccessIdentityConfig:
  #       Comment: !If [ isCreateCfOriginAccessIdentityForS3, !Ref cfOriginAccessIdentityComment, !Ref "AWS::NoValue" ] #!Ref cfOriginAccessIdentityComment
  
  cacheRequestPolicy:
    Type: AWS::CloudFront::CachePolicy
    Properties: 
      CachePolicyConfig: 
        Comment: !Ref cfCachePolicyConfigComment
        DefaultTTL: !Ref defaultTTL
        MaxTTL: !Ref maxTTL
        MinTTL: !Ref minTTL
        Name: !Ref cfCachePolicyConfigName
        ParametersInCacheKeyAndForwardedToOrigin:
          CookiesConfig: 
            CookieBehavior: !Ref cfCachePolicyCookieBehavior
          EnableAcceptEncodingBrotli: false
          EnableAcceptEncodingGzip: false
          HeadersConfig: 
            HeaderBehavior: !Ref cfCachePolicyHeaderBehavior
            Headers: 
              - Host
              - Origin
              - Referer
          QueryStringsConfig: 
            QueryStringBehavior: none
  
  cloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Comment: !Ref cfDistComment 
        Origins:
          # - !If
          #   - isCreateS3Origin
          #   - Id: !Ref s3OriginId
          #     DomainName: !Sub ${s3BucketDomainName}
          #     S3OriginConfig:
          #       OriginAccessIdentity: !Sub "origin-access-identity/cloudfront/${cloudFrontOriginAccessIdentityForS3}"
          #   - !Ref "AWS::NoValue"
          - !If
            - isCreateAlbOrigin
            - Id: !Ref targetOriginId
              DomainName: !Ref targetDns
              CustomOriginConfig:
                HTTPSPort: !Ref cfHttpsPort
                OriginProtocolPolicy: !Ref originProtocolPolicy
                OriginSSLProtocols:
                  - !Ref cfOriginSSLProtocols
            - !Ref "AWS::NoValue"
        Logging: !If
          - isEnableCfLogging
          - Bucket: !Ref s3CfAccessLogBucketDomainName
            IncludeCookies: !Ref accessLogCookies
            Prefix: !Ref accessLogPrefix
          - !Ref "AWS::NoValue"
        Aliases:
          - !If
            - isEnableAlias
            - !Ref cfAlias
            - !Ref "AWS::NoValue"
        DefaultCacheBehavior: 
          # !If
            # - isCreateAlbOrigin
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
            - PUT
            - PATCH
            - POST
            - DELETE
          TargetOriginId: !Ref targetOriginId
          Compress: true
          OriginRequestPolicyId: !Ref cfOriginRequestPolicyId
          CachePolicyId: !If [ isEnableCacheRequestPolicy, !Ref cacheRequestPolicy, !Ref cfCacheDisablePolicyId ]
          ResponseHeadersPolicyId: !Ref cfResponseHeadersPolicyId
          ViewerProtocolPolicy: !Ref viewerProtocolPolicy
            # - AllowedMethods:
            #     - GET
            #     - HEAD
            #     - OPTIONS
            #     - PUT
            #     - PATCH
            #     - POST
            #     - DELETE
            #   CachedMethods:
            #     - GET
            #     - HEAD
            #   TargetOriginId: !Ref s3OriginId
            #   CachePolicyId: !If [ isEnableCacheRequestPolicy, !Ref cacheRequestPolicy, !Ref cfCacheDisablePolicyId ]
            #   ViewerProtocolPolicy: !Ref viewerProtocolPolicy
        Enabled: !Ref cfDistributionStatus  
        HttpVersion: !Ref cfHttpVersion
        PriceClass: !Ref cfPriceClass  
        ViewerCertificate:
          AcmCertificateArn: !Sub arn:aws:acm:us-east-1:${AWS::AccountId}:certificate/${acmCertificateIdentifier}
          MinimumProtocolVersion: !Ref acmCertificateProtocolVersion
          SslSupportMethod: !Ref acmCertificateSslSupportMethod
      Tags:
        - Key: Name
          Value: !Sub "${project}-${env}-${app}-${AWS::Region}"
        - Key: project
          Value: !Ref project
        - Key: environment
          Value: !Ref env

Outputs:
  cloudFrontDistributionId:
    Value: !Ref cloudFrontDistribution
    Export:
      Name: !Sub "${project}-${env}-${app}-cfDistributionId-${AWS::Region}"
  cloudFrontDistributionDomainName:
    Value: !GetAtt cloudFrontDistribution.DomainName
    Export:
      Name: !Sub "${project}-${env}-${app}-cfDistributionDomainName-${AWS::Region}"